{
  "formatVersion": "1.0.0",
  "defines": {
    "id": "org.mal-lang.coreLang",
    "version": "1.0.0"
  },
  "categories": [
    {
      "name": "ComputeResources",
      "meta": {}
    },
    {
      "name": "DataResources",
      "meta": {}
    },
    {
      "name": "IAM",
      "meta": {}
    },
    {
      "name": "User",
      "meta": {}
    },
    {
      "name": "Networking",
      "meta": {}
    },
    {
      "name": "Vulnerability",
      "meta": {}
    }
  ],
  "assets": [
    {
      "name": "Hardware",
      "meta": {
        "user": "Specifies the hardware on which applications can run."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [],
      "attackSteps": [
        {
          "name": "attemptUseVulnerabilityFromPhysicalAccess",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUseVulnerabilityFromPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "bypassHardwareModificationsProtection"
              }
            ]
          }
        },
        {
          "name": "successfulUseVulnerabilityFromPhysicalAccess",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "useVulnerability"
              }
            ]
          }
        },
        {
          "name": "attemptUseVulnerabilityFromSoftwareFullAccess",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "useVulnerability"
              }
            ]
          }
        },
        {
          "name": "useVulnerability",
          "meta": {
            "user": "The attacker is able to use the associated vulnerabilities, usually as a result of obtaining physical access."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "vulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAbuse"
                }
              }
            ]
          }
        },
        {
          "name": "attemptSpreadWormThroughRemovableMedia",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulSpreadWormThroughRemovableMedia"
              },
              {
                "type": "attackStep",
                "name": "bypassHardwareModificationsProtection"
              }
            ]
          }
        },
        {
          "name": "successfulSpreadWormThroughRemovableMedia",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "spreadWormThroughRemovableMedia"
              }
            ]
          }
        },
        {
          "name": "spreadWormThroughRemovableMedia",
          "meta": {
            "developer": "Try to spread malware through removable media that the users connect to the hardware system."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "union",
                  "lhs": {
                    "type": "field",
                    "name": "users"
                  },
                  "rhs": {
                    "type": "collect",
                    "lhs": {
                      "type": "field",
                      "name": "physicalZones"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "users"
                    }
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeliverMaliciousRemovableMedia"
                }
              }
            ]
          }
        },
        {
          "name": "fullAccess",
          "meta": {
            "user": "Full access on a piece of hardware grants full access on the applications running on it and access to the hosted data."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "fullAccess"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWrite"
                }
              },
              {
                "type": "attackStep",
                "name": "deny"
              },
              {
                "type": "attackStep",
                "name": "attemptSpreadWormThroughRemovableMedia"
              }
            ]
          }
        },
        {
          "name": "attemptSupplyChainAttack",
          "meta": {
            "user": "Adversaries may perform supply chain compromise attacks to gain control of hardware before it is put into use.",
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses.",
            "modeler": "Triggering this attack step is the only way to model hardware supply chain attacks in the language, therefore scenarios interested in those aspects need to employ it as an entry point."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "entrypoint"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulSupplyChainAttack"
              },
              {
                "type": "attackStep",
                "name": "bypassSupplyChainAuditing"
              }
            ]
          }
        },
        {
          "name": "successfulSupplyChainAttack",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "supplyChainAttack"
              }
            ]
          }
        },
        {
          "name": "supplyChainAttack",
          "meta": {
            "user": "A supply chain compromise means that the attacker has gained full access of the hardware.",
            "modeler": "The Hardware supply chain attack represents an attacker being able to tamper with the hardware/firmware before the deployment of the product and not alterations made to the hardware/firmware once it is operating."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "supplyChainAuditing",
          "meta": {
            "user": "Auditing inside the hardware supply chain can detect possible supply chain attacks."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "supplyChainAuditingBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassSupplyChainAuditing",
          "meta": {
            "user": "Supply chain auditing can be bypassed."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "supplyChainAuditingBypassed"
              }
            ]
          }
        },
        {
          "name": "supplyChainAuditingBypassed",
          "meta": {
            "developer": "Supply chain auditing is bypassed either because it was not set or the attacker was able to circumvent it through additional effort."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulSupplyChainAttack"
              }
            ]
          }
        },
        {
          "name": "physicalAccess",
          "meta": {
            "user": "Attacker has physical access to the location where the hardware is physically deployed. They could then deny the hardware, locally connect to the hosted applications, and exploit potential physical vulnerabilities.",
            "modeler": "This attack step can be used as an entry point when analyzing scenarios that involve gaining physical access to assets."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "entrypoint"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localConnect"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptHardwareModifications"
              }
            ]
          }
        },
        {
          "name": "attemptHardwareModifications",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulHardwareModifications"
              },
              {
                "type": "attackStep",
                "name": "bypassHardwareModificationsProtection"
              }
            ]
          }
        },
        {
          "name": "successfulHardwareModifications",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "hardwareModifications"
              }
            ]
          }
        },
        {
          "name": "hardwareModifications",
          "meta": {
            "developer": "Attacker is able to modify the hardware setup. They could then exploit physical vulnerabilities or software vulnerabilities that require physical access."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUseVulnerabilityFromPhysicalAccess"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "vulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "hardwareModificationsProtection",
          "meta": {
            "user": "This defense protects against unauthorized modifications to the hardware that would allow an attacker to exploit a hardware vulnerability or a user to connect malicious devices to it.",
            "developer": "But it does not protect against denial of service attacks or local connect on hosted applications."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "hardwareModificationsProtectionBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassHardwareModificationsProtection",
          "meta": {
            "user": "Hardware modifications protection can be bypassed."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "hardwareModificationsProtectionBypassed"
              }
            ]
          }
        },
        {
          "name": "hardwareModificationsProtectionBypassed",
          "meta": {
            "developer": "Hardware modifications protection is bypassed either because it was not set or the attacker was able to circumvent it through additional effort."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUseVulnerabilityFromPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "successfulHardwareModifications"
              },
              {
                "type": "attackStep",
                "name": "successfulSpreadWormThroughRemovableMedia"
              },
              {
                "type": "attackStep",
                "name": "successfulUnsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "attemptUnsafeUserActivity",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUnsafeUserActivity"
              },
              {
                "type": "attackStep",
                "name": "bypassHardwareModificationsProtection"
              }
            ]
          }
        },
        {
          "name": "successfulUnsafeUserActivity",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "unsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "unsafeUserActivity",
          "meta": {
            "user": "A user is performing unsafe actions on the hardware. This exposes the Applications running on top of the hardware and fulfils the physical access requirement of SoftwareVulnerabilities associated with them.",
            "developer": "Currently only represents connecting a malicious removable media drive."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "Denial of service (DoS) attack on hardware leads to DoS on all the applications running on it and hosted data."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "Read on hardware leads to a read on all the applications running on it and hosted data."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              }
            ]
          }
        },
        {
          "name": "modify",
          "meta": {
            "user": "Modify on hardware gives the attacker full access to the hardware and leads to a modify/write on all the applications running on it and hosted data."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sysExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptModify"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWrite"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "SoftwareProduct",
      "meta": {
        "user": "A software product that certain applications are using which represents a specific software package, potentially even a version, which can be associated with certain vulnerabilities or have its deployment repositories compromised in a software supply chain attack.",
        "developer": "This asset was introduced in order to improve the usability of the language and enable software supply chain attacks."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": "Information",
      "variables": [],
      "attackSteps": [
        {
          "name": "compromiseApplications",
          "meta": {
            "user": "If the origin of a software product is compromised (modified maliciously) this is interpreted as a software supply chain attack and therefore the associated applications should also be fully compromised."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptFullAccessFromSupplyChainCompromise"
                }
              }
            ]
          }
        },
        {
          "name": "write",
          "meta": {
            "user": "If the attacker is able to write the software product they are able to execute a software supply chain attack on the applications associated with it."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "compromiseApplications"
              }
            ]
          }
        },
        {
          "name": "readApplications",
          "meta": {
            "developer": "This is an intermediary attack step to propagate read on all of the associated applications if the vulnerability has a confidentiality impact."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReadFromSoftProdVulnerability"
                }
              }
            ]
          }
        },
        {
          "name": "modifyApplications",
          "meta": {
            "developer": "This is an intermediary attack step to propagate modify on all of the associated applications if the vulnerability has an integrity impact."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptModifyFromSoftProdVulnerability"
                }
              }
            ]
          }
        },
        {
          "name": "denyApplications",
          "meta": {
            "developer": "This is an intermediary attack step to propagate deny on all of the associated applications if the vulnerability has an availability impact."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDenyFromSoftProdVulnerability"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Application",
      "meta": {
        "user": "An application models any type of software process or component, from firmware and operating systems to plugins and sessions.",
        "modeler": "Applications are some of the most common assets in models due to their versatility and scope."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
        {
          "name": "allVulnerabilities",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "vulnerabilities"
            },
            "rhs": {
              "type": "collect",
              "lhs": {
                "type": "field",
                "name": "appSoftProduct"
              },
              "rhs": {
                "type": "field",
                "name": "softProductVulnerabilities"
              }
            }
          }
        },
        {
          "name": "outgoingApplicationConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "appConnections"
            },
            "rhs": {
              "type": "field",
              "name": "outgoingAppConnections"
            }
          }
        },
        {
          "name": "ingoingApplicationConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "appConnections"
            },
            "rhs": {
              "type": "field",
              "name": "ingoingAppConnections"
            }
          }
        }
      ],
      "attackSteps": [
        {
          "name": "notPresent",
          "meta": {
            "user": "This defense is used to reason about the attack vectors introduced by this asset. It should be used to model the possibility that the Application does not actually exist. Typically this is useful to see what attack steps are removed if a particular non-essential component(e.g. a plugin, library, feature, or service).",
            "developer": "This defense allows for both speculation about the presence of a particular application and to suggest that if it is possible removing it may restrict the attacker's actions."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUseVulnerability"
              },
              {
                "type": "attackStep",
                "name": "successfulReverseReach"
              },
              {
                "type": "attackStep",
                "name": "networkConnectFromResponse"
              },
              {
                "type": "attackStep",
                "name": "specificAccessFromLocalConnection"
              },
              {
                "type": "attackStep",
                "name": "specificAccessFromNetworkConnection"
              },
              {
                "type": "attackStep",
                "name": "localAccess"
              },
              {
                "type": "attackStep",
                "name": "networkAccess"
              },
              {
                "type": "attackStep",
                "name": "successfulUnsafeUserActivity"
              },
              {
                "type": "attackStep",
                "name": "fullAccessFromSupplyChainCompromise"
              },
              {
                "type": "attackStep",
                "name": "readFromSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "modifyFromSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "denyFromSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "successfulApplicationRespondConnectThroughData"
              },
              {
                "type": "attackStep",
                "name": "successfulAuthorizedApplicationRespondConnectThroughData"
              },
              {
                "type": "attackStep",
                "name": "successfulRead"
              },
              {
                "type": "attackStep",
                "name": "successfulModify"
              },
              {
                "type": "attackStep",
                "name": "successfulDeny"
              }
            ]
          }
        },
        {
          "name": "attemptUseVulnerability",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUseVulnerability"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "protectorIDPSs"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "bypassEffectiveness"
                }
              }
            ]
          }
        },
        {
          "name": "successfulUseVulnerability",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "useVulnerability"
              }
            ]
          }
        },
        {
          "name": "useVulnerability",
          "meta": {
            "user": "Try to exploit the associated vulnerabilities.",
            "developer": "This includes vulnerabilities associated with the SoftwareProduct that this Application is running as well."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAbuse"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptSoftwareProductAbuse"
              },
              {
                "type": "attackStep",
                "name": "readFromSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "modifyFromSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "denyFromSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "attemptReverseReach",
          "meta": {
            "user": "The attacker is reachable from this Application therefore start propagating reverse reach from it. Reverse reach is used to determine whether or not the attacker can be reached by the user.",
            "developer": "Intermediate attack step to allow for defenses.",
            "modeler": "If the entry point of the attacker is an Application this attack step needs to be explicitly called on it by the modeler in order to have reverse reach start propagating from the Application to the rest of the assets in the model. This is the case because no other attack step on the Application asset triggers this attack step."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "entrypoint"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulReverseReach"
              }
            ]
          }
        },
        {
          "name": "successfulReverseReach",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "reverseReach",
          "meta": {
            "developer": "Reverse reach is used to determine whether or not the attacker can be reached by the user. Reverse reach propagates toward outgoing or bidirectional communications."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "networks"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "ingoingApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "attackStep",
                "name": "attackerUnsafeUserActivityCapabilityWithReverseReach"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "receivedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "attackStep",
                "name": "networkConnectFromResponse"
              }
            ]
          }
        },
        {
          "name": "localConnect",
          "meta": {
            "user": "The attacker can interface with the Application without going through networking communications. This is achieved by gaining full access on a hosted Application, specific access on the hosting Application, physical access on the hardware on which the Application is running, or via unsafe user activity."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "localAccess"
              },
              {
                "type": "attackStep",
                "name": "specificAccessFromLocalConnection"
              },
              {
                "type": "attackStep",
                "name": "attemptUseVulnerability"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityLocalAccessAchieved"
              }
            ]
          }
        },
        {
          "name": "networkConnectUninspected",
          "meta": {
            "user": "An attacker can connect to any network exposed application and try to authenticate or trigger vulnerabilities."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUseVulnerability"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityNetworkAccessAchieved"
              },
              {
                "type": "attackStep",
                "name": "networkConnect"
              },
              {
                "type": "attackStep",
                "name": "specificAccessNetworkConnect"
              }
            ]
          }
        },
        {
          "name": "networkConnectInspected",
          "meta": {
            "user": "If the network communications occur via any ConnectionRules that have their payload inspected the attacker can still authenticate, but they cannot trigger vulnerabilities."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkConnect"
              },
              {
                "type": "attackStep",
                "name": "specificAccessNetworkConnect"
              }
            ]
          }
        },
        {
          "name": "networkConnect",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkAccess"
              }
            ]
          }
        },
        {
          "name": "specificAccessNetworkConnect",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "specificAccessFromNetworkConnection"
              }
            ]
          }
        },
        {
          "name": "accessNetworkAndConnections",
          "meta": {
            "developer": "The attacker can access outgoing and bidirectional networks and connections associated with the application."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "networks"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "accessUninspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "networks"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "accessInspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outgoingApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptConnectToApplicationsUninspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outgoingApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptConnectToApplicationsInspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outgoingApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccessNetworksUninspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outgoingApplicationConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccessNetworksInspected"
                }
              }
            ]
          }
        },
        {
          "name": "attemptNetworkConnectFromResponse",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkConnectFromResponse"
              }
            ]
          }
        },
        {
          "name": "networkConnectFromResponse",
          "meta": {
            "developer": "An attacker may be able to respond to requests submitted by a client application."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkConnectUninspected"
              }
            ]
          }
        },
        {
          "name": "specificAccessFromLocalConnection",
          "meta": {
            "developer": "Intermediate attack steps for modeling the two requirements (reachability and authentication) for specific access."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "specificAccess"
              }
            ]
          }
        },
        {
          "name": "specificAccessFromNetworkConnection",
          "meta": {
            "developer": "Intermediate attack steps for modeling the two requirements (reachability and authentication) for specific access."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "specificAccess"
              }
            ]
          }
        },
        {
          "name": "specificAccess",
          "meta": {
            "user": "The adversary is able to gain low-privilege access on the Application which allows them to access the networks and connections associated with it and locally connect to hosted Applications. Additionally, if they have the required privileges the attacker may also access data hosted, sent, or received by the Application."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localConnect"
                }
              },
              {
                "type": "attackStep",
                "name": "specificAccessRead"
              },
              {
                "type": "attackStep",
                "name": "specificAccessModify"
              },
              {
                "type": "attackStep",
                "name": "specificAccessDelete"
              },
              {
                "type": "attackStep",
                "name": "bypassContainerization"
              },
              {
                "type": "attackStep",
                "name": "attemptUseVulnerability"
              },
              {
                "type": "attackStep",
                "name": "attemptAuthorizedApplicationRespondConnectThroughData"
              },
              {
                "type": "attackStep",
                "name": "accessNetworkAndConnections"
              }
            ]
          }
        },
        {
          "name": "bypassContainerization",
          "meta": {
            "user": "The attacker is able to break out of an application container/sandbox and try to exploit any vulnerability of the host application."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "HardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostApp"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUseVulnerability"
                }
              }
            ]
          }
        },
        {
          "name": "authenticate",
          "meta": {
            "user": "The attacker is able to authenticate with the appropriate high-level privileges."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "localAccess"
              },
              {
                "type": "attackStep",
                "name": "networkAccess"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "highPrivilegesAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityHighPrivilegesAchieved"
              }
            ]
          }
        },
        {
          "name": "specificAccessAuthenticate",
          "meta": {
            "user": "The attacker is able to authenticate with the appropriate low-level privileges."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "specificAccessFromLocalConnection"
              },
              {
                "type": "attackStep",
                "name": "specificAccessFromNetworkConnection"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "lowPrivilegesAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityLowPrivilegesAchieved"
              }
            ]
          }
        },
        {
          "name": "localAccess",
          "meta": {
            "developer": "Intermediate attack steps for modeling the two requirements (reachability and authentication) for full access."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "networkAccess",
          "meta": {
            "developer": "Intermediate attack steps for modeling the two requirements (reachability and authentication) for full access."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "fullAccess",
          "meta": {
            "user": "Full access on the Application means the attacker has complete control of the application and can perform any actions within its execution context.",
            "modeler": "It is common in models for the attacker to be granted full access on an Application, representing their own tools, that is connected to the Internet to explore possible attack vectors."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "entrypoint"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptRead"
              },
              {
                "type": "attackStep",
                "name": "attemptModify"
              },
              {
                "type": "attackStep",
                "name": "attemptDeny"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "executionPrivIAMs"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptApplicationRespondConnectThroughData"
              },
              {
                "type": "attackStep",
                "name": "accessNetworkAndConnections"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostApp"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localConnect"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "managedRoutingFw"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptModify"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostHardware"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptSpreadWormThroughRemovableMedia"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hostHardware"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUseVulnerabilityFromSoftwareFullAccess"
                }
              },
              {
                "type": "attackStep",
                "name": "specificAccess"
              }
            ]
          }
        },
        {
          "name": "physicalAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step used to propagate physical access throughout application nesting."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductVulnerabilityPhysicalAccessAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "attemptUnsafeUserActivity",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUnsafeUserActivity"
              },
              {
                "type": "attackStep",
                "name": "attackerUnsafeUserActivityCapabilityWithReverseReach"
              },
              {
                "type": "attackStep",
                "name": "attackerUnsafeUserActivityCapabilityWithoutReverseReach"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "protectorIDPSs"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "bypassEffectiveness"
                }
              }
            ]
          }
        },
        {
          "name": "successfulUnsafeUserActivity",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "unsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "unsafeUserActivity",
          "meta": {
            "user": "The unsafe actions of users on this application open it up to attacks and enable vulnerabilities that require user interaction."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "localConnect"
              },
              {
                "type": "attackStep",
                "name": "networkConnectUninspected"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allVulnerabilities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "userInteractionAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "attackerUnsafeUserActivityCapability",
          "meta": {
            "developer": "The impacts of the user's unsafe actions are greatly limited if there are no channels through which the attacker can be reached by the unwitting user."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUnsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "attackerUnsafeUserActivityCapabilityWithReverseReach",
          "meta": {
            "developer": "The attacker can be reached from this application and can therefore more easily exploit the unsafe user actions."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attackerUnsafeUserActivityCapability"
              }
            ]
          }
        },
        {
          "name": "attackerUnsafeUserActivityCapabilityWithoutReverseReach",
          "meta": {
            "developer": "The attacker cannot be reached from this application. This means that the autonomous malicious code must either be able to do reconnaissance on the fly or the reconnaissance was done beforehand and coded into it. This is much more complex and difficult than the situation where the attacker is reachable from the application which restricts the capabilities of being successful. Important Note: This step should never directly or indirectly lead to reverse reach as it would fulfil the attacker interactivity requirements it is missing."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attackerUnsafeUserActivityCapability"
              }
            ]
          }
        },
        {
          "name": "supplyChainAuditing",
          "meta": {
            "user": "Auditing inside the supply chain can detect possible supply chain attacks."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "supplyChainAuditingBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassSupplyChainAuditing",
          "meta": {
            "user": "Supply chain auditing can be bypassed."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "supplyChainAuditingBypassed"
              }
            ]
          }
        },
        {
          "name": "supplyChainAuditingBypassed",
          "meta": {
            "developer": "The supply chain audit is bypassed either because it was not set or the attacker was able to circumvent it through additional effort."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccessFromSupplyChainCompromise"
              }
            ]
          }
        },
        {
          "name": "attemptFullAccessFromSupplyChainCompromise",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccessFromSupplyChainCompromise"
              },
              {
                "type": "attackStep",
                "name": "bypassSupplyChainAuditing"
              }
            ]
          }
        },
        {
          "name": "fullAccessFromSupplyChainCompromise",
          "meta": {
            "developer": "Intermediate attack step."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              }
            ]
          }
        },
        {
          "name": "attemptReadFromSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "readFromSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "attemptModifyFromSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "modifyFromSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "attemptDenyFromSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "denyFromSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "softwareCheck",
          "meta": {
            "developer": "Only enable the following attacks steps if a SoftwareProduct is associated with this Application."
          },
          "detectors": {},
          "type": "exist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "appSoftProduct"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "readFromSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "modifyFromSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "denyFromSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityLocalAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "localAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityNetworkAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityPhysicalAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccessAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityLowPrivilegesAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "lowPrivilegesAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityHighPrivilegesAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "highPrivilegesAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductVulnerabilityUserInteractionAchieved",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "appSoftProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softProductVulnerabilities"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "userInteractionAchieved"
                }
              },
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "attemptSoftwareProductAbuse",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "softwareProductAbuse"
              }
            ]
          }
        },
        {
          "name": "softwareProductAbuse",
          "meta": {
            "developer": "Intermediate attack step used to conditionally trigger SoftwareProduct vulnerabilities separately for each application."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "readFromSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "modifyFromSoftProdVulnerability"
              },
              {
                "type": "attackStep",
                "name": "denyFromSoftProdVulnerability"
              }
            ]
          }
        },
        {
          "name": "readFromSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to handle SoftwareProduct existence."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptRead"
              }
            ]
          }
        },
        {
          "name": "modifyFromSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to handle SoftwareProduct existence."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptModify"
              }
            ]
          }
        },
        {
          "name": "denyFromSoftProdVulnerability",
          "meta": {
            "developer": "Intermediate attack step to handle SoftwareProduct existence."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptDeny"
              }
            ]
          }
        },
        {
          "name": "attemptApplicationRespondConnectThroughData",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulApplicationRespondConnectThroughData"
              }
            ]
          }
        },
        {
          "name": "successfulApplicationRespondConnectThroughData",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "applicationRespondConnectThroughData"
              }
            ]
          }
        },
        {
          "name": "applicationRespondConnectThroughData",
          "meta": {
            "developer": "After full access on the application received data can be used to try a connect through respond to the client side application."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "receivedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptApplicationRespondConnect"
                }
              }
            ]
          }
        },
        {
          "name": "attemptAuthorizedApplicationRespondConnectThroughData",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAuthorizedApplicationRespondConnectThroughData"
              }
            ]
          }
        },
        {
          "name": "successfulAuthorizedApplicationRespondConnectThroughData",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedApplicationRespondConnectThroughData"
              }
            ]
          }
        },
        {
          "name": "authorizedApplicationRespondConnectThroughData",
          "meta": {
            "developer": "After specific access on the application received data can be used to try a connect through respond to the client side application. To succeed the attacker must also attain write privileges on the received data."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "receivedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedApplicationRespondConnectFromApplication"
                }
              }
            ]
          }
        },
        {
          "name": "attemptRead",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulRead"
              }
            ]
          }
        },
        {
          "name": "successfulRead",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "The attacker can read some or all of this service's (and executed by this) source code and/or data (both local and sent/received)."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "receivedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              }
            ]
          }
        },
        {
          "name": "specificAccessRead",
          "meta": {
            "user": "The attacker can read the service's source code and/or sent and received Data, given the necessary permissions"
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedReadFromApplication"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedReadFromApplication"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "receivedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedReadFromApplication"
                }
              }
            ]
          }
        },
        {
          "name": "attemptModify",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulModify"
              }
            ]
          }
        },
        {
          "name": "successfulModify",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "modify"
              }
            ]
          }
        },
        {
          "name": "modify",
          "meta": {
            "user": "The attacker can modify some or all of this service's (and executed by this) source code and/or data."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "fullAccess"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWrite"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptModify"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWrite"
                }
              }
            ]
          }
        },
        {
          "name": "specificAccessModify",
          "meta": {
            "user": "The attacker can modify the service's source code and/or sent  Data, given the necessary permissions"
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedWriteFromApplication"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedWriteFromApplication"
                }
              }
            ]
          }
        },
        {
          "name": "attemptDeny",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulDeny"
              }
            ]
          }
        },
        {
          "name": "successfulDeny",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "The attacker can deny some or all functionality and data pertaining to this application/service as well as executed applications."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "appExecutedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              }
            ]
          }
        },
        {
          "name": "specificAccessDelete",
          "meta": {
            "user": "The attacker can delete some or all functionality and data pertaining to this application/service as well as executed applications, given the necessary permissions"
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedDeleteFromApplication"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "sentData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedDeleteFromApplication"
                }
              }
            ]
          }
        },
        {
          "name": "denyFromNetworkingAsset",
          "meta": {
            "developer": "This is an intermediate attack step to only allow deny on an application when all the connection rules and networks associated with it are denied, because an app can be serving on many different ports."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptDeny"
              }
            ]
          }
        },
        {
          "name": "denyFromLockout",
          "meta": {
            "developer": "This is an intermediate attack step to only trigger deny on an application when all the executing access control roles are locked out."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptDeny"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "IDPS",
      "meta": {
        "user": "An IDPS(Intrusion Detection and Prevention System) is tasked with protecting other applications from malicious activity, such as exploiting vulnerabilities or unsafe user actions."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": "Application",
      "variables": [],
      "attackSteps": [
        {
          "name": "notPresent",
          "meta": {
            "developer": "It would be ideal to hide this defense when using modelling tools to avoid confusion.",
            "modeler": "As per the comment for the effectiveness defense, the notPresent defense does not function as desired for the IDPS asset and should not be used. The effectiveness defense should be adjusted to reflect the likelihood that the IDPS is present instead."
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "Override",
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": null
        },
        {
          "name": "effectiveness",
          "meta": {
            "user": "The effectiveness defense represents how capable the IDPS is to prevent disruptions from occurring on the associated applications.",
            "modeler": "The notPresent defense should inversely impact the effectiveness defense. However, because this is not currently implemented in coreLang it is up to the modeler to properly take this into account when setting the values of these defenses."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "effectivenessBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassEffectiveness",
          "meta": {
            "user": "The effectiveness of an IDPS can be bypassed."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "effectivenessBypassed"
              }
            ]
          }
        },
        {
          "name": "effectivenessBypassed",
          "meta": {
            "developer": "The protection of the IDPS has been bypassed either as a result of attacker activity or due to some internal property of the IDPS."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "protectedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "successfulUseVulnerability"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "protectedApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "successfulUnsafeUserActivity"
                }
              }
            ]
          }
        },
        {
          "name": "fullAccess",
          "meta": {
            "user": "The IDPS is no longer able to protect the apps assigned to it if it has been compromised itself."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "effectivenessBypassed"
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "developer": "The IDPS is no longer able to protect the apps assigned to it if it has been denied itself."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "effectivenessBypassed"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "PhysicalZone",
      "meta": {
        "user": "A physical zone is the location where hardware systems and networks are physically deployed."
      },
      "category": "ComputeResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [],
      "attackSteps": [
        {
          "name": "gainPhysicalAccess",
          "meta": {
            "user": "By gaining access on a physical zone, physical access on the housed hardware and networks is also attained.",
            "modeler": "This attack step can be used as an entry point when analyzing scenarios that involve gaining physical access to assets."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "entrypoint"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardwareSystems"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccess"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "networks"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "physicalAccess"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Information",
      "meta": {
        "user": "Represents any type of information that might be contained inside Data. This include general purpose information, but also serves as the basis for more specialized types, such as Credentials and SoftwareProduct. Information represents the abstract concept, while Data represent an actual instance of information stored or transmitted digitally."
      },
      "category": "DataResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [],
      "attackSteps": [
        {
          "name": "read",
          "meta": {
            "user": "The attacker is able to read the information. They may still be unable to extract it, which represents the adversary being able to read it themselves. This is the case if autonomous code is able to read it, but lack the required networking connections to transmit it back to the adversary."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "dataReplicas"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containerData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              }
            ]
          }
        },
        {
          "name": "write",
          "meta": {
            "user": "The attacker is able to write the information."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "dataReplicas"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "write"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containerData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "write"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "dependentApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "fullAccess"
                }
              },
              {
                "type": "attackStep",
                "name": "delete"
              }
            ]
          }
        },
        {
          "name": "delete",
          "meta": {
            "user": "The attacker is able to delete the information."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "dataReplicas"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "delete"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containerData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "delete"
                }
              },
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "The attacker is able to deny the information."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "dataReplicas"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containerData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "dependentApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              }
            ]
          }
        },
        {
          "name": "extract",
          "meta": {
            "user": "The attacker is able to extract the information. This means that they have a path available through which they can transfer the information back to a system that they control."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": null
        },
        {
          "name": "attemptReadFromReplica",
          "meta": {
            "developer": "Reading one replica allows the attacker to read all other replicas as well since the information contained in them is the same."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              }
            ]
          }
        },
        {
          "name": "attemptWriteFromReplica",
          "meta": {
            "developer": "Information can be overwritten only if all replicas have been overwritten."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "write"
              }
            ]
          }
        },
        {
          "name": "attemptDeleteFromReplica",
          "meta": {
            "developer": "Information can be deleted only if all replicas have been deleted."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "delete"
              }
            ]
          }
        },
        {
          "name": "attemptDenyFromReplica",
          "meta": {
            "developer": "Information can be denied only if all replicas have been denied."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "attemptExtractFromReplica",
          "meta": {
            "developer": "The attacker attempts to extract the information."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "extract"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Data",
      "meta": {
        "user": "Any form of data that can be stored or transmitted."
      },
      "category": "DataResources",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
        {
          "name": "senderOutgoingApplicationConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "collect",
              "lhs": {
                "type": "field",
                "name": "senderApp"
              },
              "rhs": {
                "type": "field",
                "name": "appConnections"
              }
            },
            "rhs": {
              "type": "collect",
              "lhs": {
                "type": "field",
                "name": "senderApp"
              },
              "rhs": {
                "type": "field",
                "name": "outgoingAppConnections"
              }
            }
          }
        },
        {
          "name": "receiverIngoingApplicationConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "collect",
              "lhs": {
                "type": "field",
                "name": "receiverApp"
              },
              "rhs": {
                "type": "field",
                "name": "appConnections"
              }
            },
            "rhs": {
              "type": "collect",
              "lhs": {
                "type": "field",
                "name": "receiverApp"
              },
              "rhs": {
                "type": "field",
                "name": "ingoingAppConnections"
              }
            }
          }
        },
        {
          "name": "transitNetworkInboundAllowedConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "union",
              "lhs": {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "transitNetwork"
                },
                "rhs": {
                  "type": "field",
                  "name": "netConnections"
                }
              },
              "rhs": {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "transitNetwork"
                },
                "rhs": {
                  "type": "field",
                  "name": "ingoingNetConnections"
                }
              }
            },
            "rhs": {
              "type": "collect",
              "lhs": {
                "type": "field",
                "name": "transitNetwork"
              },
              "rhs": {
                "type": "field",
                "name": "diodeIngoingNetConnections"
              }
            }
          }
        },
        {
          "name": "transitNetworkOutboundAllowedConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "collect",
              "lhs": {
                "type": "field",
                "name": "transitNetwork"
              },
              "rhs": {
                "type": "field",
                "name": "netConnections"
              }
            },
            "rhs": {
              "type": "collect",
              "lhs": {
                "type": "field",
                "name": "transitNetwork"
              },
              "rhs": {
                "type": "field",
                "name": "outgoingNetConnections"
              }
            }
          }
        }
      ],
      "attackSteps": [
        {
          "name": "notPresent",
          "meta": {
            "user": "This defense is used to reason about the attack vectors introduced by this asset. It should be used to model the possibility of data not existing on the associated container (i.e. Hardware, Application, Network, etc.).",
            "developer": "Enabling this defense should make the asset behave as if it did not exist, as such all of its impactful attack steps should be disabled by it."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "applicationRespondConnect"
              },
              {
                "type": "attackStep",
                "name": "successfulRead"
              },
              {
                "type": "attackStep",
                "name": "successfulWrite"
              },
              {
                "type": "attackStep",
                "name": "successfulDeny"
              },
              {
                "type": "attackStep",
                "name": "successfulDelete"
              },
              {
                "type": "attackStep",
                "name": "reverseReach"
              },
              {
                "type": "attackStep",
                "name": "extract"
              }
            ]
          }
        },
        {
          "name": "authorizedAccessFromApplication",
          "meta": {
            "developer": "Try to gain access to the data through permissions."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedReadFromApplication"
              },
              {
                "type": "attackStep",
                "name": "authorizedWriteFromApplication"
              },
              {
                "type": "attackStep",
                "name": "authorizedDeleteFromApplication"
              }
            ]
          }
        },
        {
          "name": "dataEncrypted",
          "meta": {
            "developer": "If the data are encrypted then accessing them requires the associated encryption credentials/key. Data will be considered encrypted if there is at least one Credentials instance associated with it. Otherwise, 'accessUnencryptedData' is triggered."
          },
          "detectors": {},
          "type": "notExist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "encryptCreds"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessUnencryptedData"
              }
            ]
          }
        },
        {
          "name": "dataSigned",
          "meta": {
            "developer": "If the data are signed then writing them requires the associated signing credentials/key. Data will be considered signed if there is at least one Credentials asset associated with it. Otherwise, 'accessUnsignedData' is triggered."
          },
          "detectors": {},
          "type": "notExist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "signingCreds"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessUnsignedData"
              }
            ]
          }
        },
        {
          "name": "payloadInspectionBypassFromEncryptedData",
          "meta": {
            "developer": "If the data are encrypted then payload inspection cannot be performed on the connection rules they are transmitted over."
          },
          "detectors": {},
          "type": "exist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "encryptCreds"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "bypassPayloadInspectionFromEncryptedData"
              }
            ]
          }
        },
        {
          "name": "bypassPayloadInspectionFromEncryptedData",
          "meta": {
            "developer": "The connection rules that the encrypted data traverse over cannot provide payload inspection since they are assumed to permit encrypted traffic. This implies that the attacker could simply encrypt their own communications to evade inspection."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "intersection",
                  "lhs": {
                    "type": "variable",
                    "name": "senderOutgoingApplicationConnections"
                  },
                  "rhs": {
                    "type": "variable",
                    "name": "transitNetworkInboundAllowedConnections"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "payloadInspectionBypassed"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "intersection",
                  "lhs": {
                    "type": "variable",
                    "name": "receiverIngoingApplicationConnections"
                  },
                  "rhs": {
                    "type": "variable",
                    "name": "transitNetworkOutboundAllowedConnections"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "payloadInspectionBypassed"
                }
              }
            ]
          }
        },
        {
          "name": "accessUnencryptedData",
          "meta": {
            "developer": "If data are unencrypted then access them."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessDecryptedData"
              }
            ]
          }
        },
        {
          "name": "accessUnsignedData",
          "meta": {
            "developer": "If data are unsigned then alter them."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessSpoofedData"
              }
            ]
          }
        },
        {
          "name": "accessSpoofedData",
          "meta": {
            "developer": "Intermediate attack step to only allow effects of 'accessUnsignedData' on data after compromising the signing credentials or signing is disabled."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "applicationRespondConnect"
              },
              {
                "type": "attackStep",
                "name": "successfulWrite"
              }
            ]
          }
        },
        {
          "name": "accessDecryptedData",
          "meta": {
            "developer": "Intermediate attack step to only allow effects of 'accessUnencryptedData' on data after compromising the encryption credentials or encryption is disabled."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "applicationRespondConnect"
              },
              {
                "type": "attackStep",
                "name": "successfulRead"
              },
              {
                "type": "attackStep",
                "name": "successfulWrite"
              },
              {
                "type": "attackStep",
                "name": "successfulDelete"
              }
            ]
          }
        },
        {
          "name": "attemptApplicationRespondConnect",
          "meta": {
            "developer": "Intermediate attack step to handle defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "applicationRespondConnect"
              }
            ]
          }
        },
        {
          "name": "applicationRespondConnect",
          "meta": {
            "developer": "In order to perform a respond connect attack the adversary must be able to write the received data."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "senderApp"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptNetworkConnectFromResponse"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "applicationRespondConnect"
                }
              }
            ]
          }
        },
        {
          "name": "authorizedApplicationRespondConnectFromApplication",
          "meta": {
            "developer": "The adversary can attempt a respond connect attack from an Application, but they still require write permissions in order to perform it."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedApplicationRespondConnect"
              }
            ]
          }
        },
        {
          "name": "authorizedApplicationRespondConnectFromIAM",
          "meta": {
            "developer": "The attacker has obtained the access control permissions required to modify the incoming requests."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedApplicationRespondConnect"
              }
            ]
          }
        },
        {
          "name": "authorizedApplicationRespondConnect",
          "meta": {
            "developer": "In order to perform a respond connect attack the adversary must be able to write the received data. If they only have specific access on the Application we need to see if they also have the required permissions."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptApplicationRespondConnect"
              }
            ]
          }
        },
        {
          "name": "attemptRead",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulRead"
              }
            ]
          }
        },
        {
          "name": "successfulRead",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "The attacker can read the data. This means that the data can be used for further attack steps, but they are not necessarily obtained by the attacker. The extract attack step covers the scenario where the attacker actually collects the data."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "information"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "replicatedInformation"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReadFromReplica"
                }
              },
              {
                "type": "attackStep",
                "name": "extract"
              }
            ]
          }
        },
        {
          "name": "authorizedReadFromIAM",
          "meta": {
            "developer": "The attacker has obtained the access control permissions required to read the data."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedRead"
              }
            ]
          }
        },
        {
          "name": "authorizedReadFromApplication",
          "meta": {
            "developer": "The attacker can reach the data via an Application, but they still require the adequate permissions to read it."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedRead"
              }
            ]
          }
        },
        {
          "name": "authorizedRead",
          "meta": {
            "developer": "An attacker is able to read the Data through authorized permissions, this requires both access to the Data and the adequate permissions."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptRead"
              }
            ]
          }
        },
        {
          "name": "attemptWrite",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulWrite"
              }
            ]
          }
        },
        {
          "name": "successfulWrite",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "write"
              }
            ]
          }
        },
        {
          "name": "write",
          "meta": {
            "user": "The attacker can write to the location of the data, effectively modifying or deleting it."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWrite"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "information"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "write"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "replicatedInformation"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWriteFromReplica"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "dependentApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "fullAccess"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptDelete"
              }
            ]
          }
        },
        {
          "name": "authorizedWriteFromIAM",
          "meta": {
            "developer": "The attacker has obtained the access control permissions required to write the data."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedWrite"
              }
            ]
          }
        },
        {
          "name": "authorizedWriteFromApplication",
          "meta": {
            "developer": "The attacker can reach the data via an Application, but they still require the adequate permissions to write it."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedWrite"
              }
            ]
          }
        },
        {
          "name": "authorizedWrite",
          "meta": {
            "developer": "An attacker is able to write the Data through authorized permissions, this requires both access to the Data and the adequate permissions."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptWrite"
              }
            ]
          }
        },
        {
          "name": "attemptDelete",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulDelete"
              }
            ]
          }
        },
        {
          "name": "successfulDelete",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "delete"
              }
            ]
          }
        },
        {
          "name": "delete",
          "meta": {
            "user": "The attacker can delete the data."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDelete"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "information"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "delete"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "replicatedInformation"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeleteFromReplica"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptDeny"
              }
            ]
          }
        },
        {
          "name": "authorizedDeleteFromIAM",
          "meta": {
            "developer": "The attacker has obtained the access control permissions required to delete the data."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedDelete"
              }
            ]
          }
        },
        {
          "name": "authorizedDeleteFromApplication",
          "meta": {
            "developer": "The attacker can reach the data via an Application, but they still require the adequate permissions to delete it."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "authorizedDelete"
              }
            ]
          }
        },
        {
          "name": "authorizedDelete",
          "meta": {
            "developer": "An attacker is able to delete the Data through authorized permissions, this requires both access to the Data and the adequate permissions."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptDelete"
              }
            ]
          }
        },
        {
          "name": "attemptDeny",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulDeny"
              }
            ]
          }
        },
        {
          "name": "successfulDeny",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "If a DoS is performed data are denied, it has the same effects as deleting the data."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "information"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "replicatedInformation"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDenyFromReplica"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "dependentApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              }
            ]
          }
        },
        {
          "name": "denyFromLockout",
          "meta": {
            "developer": "This is an intermediate attack step to only trigger deny on data when all the access control roles that can read them are locked out."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptDeny"
              }
            ]
          }
        },
        {
          "name": "attemptReverseReach",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "reverseReach",
          "meta": {
            "developer": "Reverse reach for Data is used to determine whether or not the data can be transferred to attacker."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "extract"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "containedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              }
            ]
          }
        },
        {
          "name": "extract",
          "meta": {
            "user": "The attacker can extract the data. The read attack step represents just being able to make use of the data for further attack steps without the attacker obtaining it."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "information"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "extract"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "replicatedInformation"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptExtractFromReplica"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "IAMObject",
      "meta": {
        "user": "An IAM object represents the base logic shared by all assets used for Identity and Access Management roles(Identity, Group, Privileges)."
      },
      "category": "IAM",
      "isAbstract": true,
      "superAsset": "Information",
      "variables": [],
      "attackSteps": [
        {
          "name": "notPresent",
          "meta": {
            "user": "This defense is used to reason about the attack vectors introduced by this asset. It should be used to model the possibility that the IAM object does not actually exist.",
            "developer": "Enabling this defense should make the asset behave as if it did not exist, as such all of its impactful attack steps should be disabled by it."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAssume"
              },
              {
                "type": "attackStep",
                "name": "successfulLockout"
              }
            ]
          }
        },
        {
          "name": "attemptAssume",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAssume"
              }
            ]
          }
        },
        {
          "name": "successfulAssume",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "assume"
              }
            ]
          }
        },
        {
          "name": "assume",
          "meta": {
            "user": "When an attacker is able to assume an IAM asset the privileges associated with it can always be exploited, other behaviour is asset specific."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "execPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authenticate"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "highPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authenticate"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "lowPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "specificAccessAuthenticate"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "readPrivData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedReadFromIAM"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "writePrivData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedWriteFromIAM"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "writePrivData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedApplicationRespondConnectFromIAM"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "deletePrivData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "authorizedDeleteFromIAM"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "managedIAMs"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "subprivileges"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "Denying Identity, Group, or Privileges means that they are unavailable to legitimate users and which may be locked out as a result."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptLockout"
              }
            ]
          }
        },
        {
          "name": "write",
          "meta": {
            "user": "Overwriting Identity, Group, or Privileges means that the attacker is able to assume them."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptAssume"
              }
            ]
          }
        },
        {
          "name": "attemptLockout",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulLockout"
              }
            ]
          }
        },
        {
          "name": "successfulLockout",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "lockout"
              }
            ]
          }
        },
        {
          "name": "lockout",
          "meta": {
            "user": "The Identity, Group, or Privileges has been locked out and cannot be used by legitimate users. This means that the applications that they can execute and data they can read might also be denied if all of the access roles that could execute or read them, respectively, have been locked out."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "execPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "denyFromLockout"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "readPrivData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "denyFromLockout"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "subprivileges"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "lockout"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Identity",
      "meta": {
        "user": "An identity models an IAM identity that should then be associated with privileges on other instances.",
        "developer": "An identity can be visualised as a group of assumable roles that can be associated with many credentials."
      },
      "category": "IAM",
      "isAbstract": false,
      "superAsset": "IAMObject",
      "variables": [],
      "attackSteps": [
        {
          "name": "notPresent",
          "meta": {
            "user": "Prevent unsafe user activity too if the Identity is assumed to not exist."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUnsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "assume",
          "meta": {
            "user": "After authentication or compromise of an account/identity, assume its privileges.",
            "developer": "This is both legitimate and illegitimate access! Also assume all the privileges of the parent identities (on the above level/inherited by this identity) because those represent the group of (inherited) roles."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "parentId"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "memberOf"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              }
            ]
          }
        },
        {
          "name": "lockoutFromCredentials",
          "meta": {
            "developer": "Only lockout an identity if all of the Credentials that could be used to authenticate have been denied."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptLockout"
              }
            ]
          }
        },
        {
          "name": "lockout",
          "meta": {
            "user": "If all of the Identities belonging to a Group are lockedout we assume that the Group as a whole is lockedout."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "memberOf"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "lockoutFromMembers"
                }
              }
            ]
          }
        },
        {
          "name": "missingUser",
          "meta": {
            "developer": "If there are no Users asociated with this Identity we make the worst case scenario assumption regarding the strength of the Credentials belonging to it."
          },
          "detectors": {},
          "type": "notExist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "users"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "credentials"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "weakCredentials"
                }
              }
            ]
          }
        },
        {
          "name": "attemptUnsafeUserActivity",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUnsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "successfulUnsafeUserActivity",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "unsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "unsafeUserActivity",
          "meta": {
            "user": "Propagate unsafe user activity to any Applications or subset of privileges associated with this Identity."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "execPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "highPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "lowPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "subprivileges"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Privileges",
      "meta": {
        "user": "A privileges asset can be associated with another IAMObject to reason about a specific subset of given privileges on Applications and Data.",
        "modeler": "The privileges asset is not meant to be used normally when assigning permissions. Identities and Groups should be directly associated with the relevant assets. The purpose of the Privileges asset is to be used as a speculative asset when reasoning about additional privileges that a particular Group or Identity may have as a result of either poor configurations or the attacker's actions."
      },
      "category": "IAM",
      "isAbstract": false,
      "superAsset": "IAMObject",
      "variables": [],
      "attackSteps": [
        {
          "name": "notPresent",
          "meta": {
            "user": "Prevent unsafe user activity too if the Privileges are assumed to not exist."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUnsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "assume",
          "meta": {
            "user": "After authentication or compromise assume its privileges.",
            "developer": "Assume identity/group the privileges are associated with since the privileges are simply an extension of it."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "IAMOwners"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              }
            ]
          }
        },
        {
          "name": "attemptUnsafeUserActivity",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulUnsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "successfulUnsafeUserActivity",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "unsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "unsafeUserActivity",
          "meta": {
            "user": "Propagate unsafe user activity to any Applications or subset of privileges associated with these Privileges."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "execPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "highPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "lowPrivApps"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "subprivileges"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Group",
      "meta": {
        "user": "A group is a way to group together identities and/or other groups. This allows the expression of hierarchical IAM (structured inheritance).",
        "modeler": "Groups can be used instead of nested identities to make the model more intuitive and clearer to understand."
      },
      "category": "IAM",
      "isAbstract": false,
      "superAsset": "IAMObject",
      "variables": [],
      "attackSteps": [
        {
          "name": "assume",
          "meta": {
            "user": "If an identity of a group is compromised then the whole group(i.e. all other privileges of the group) should be considered as compromised. Furthermore, the parent groups should also be considered compromised.",
            "developer": "The parent groups should be compromised because all the privileges of the parent groups are inherited on the children groups but lower children groups should not be compromised because lower levels might have inherited plus additional privileges."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "parentGroup"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              }
            ]
          }
        },
        {
          "name": "lockoutFromMembers",
          "meta": {
            "developer": "If all of the Identities belonging to a Group are lockedout we assume that the Group as a whole is lockedout."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptLockout"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Credentials",
      "meta": {
        "user": "Credentials can be used to get access to an Identity, but they can also be used as an encryption/signing key for Data.",
        "modeler": "Credentials represent a variety of access control mechanism(e.g. username and password pair, keycards, biometric data)."
      },
      "category": "IAM",
      "isAbstract": false,
      "superAsset": "Information",
      "variables": [],
      "attackSteps": [
        {
          "name": "notDisclosed",
          "meta": {
            "user": "Describes the case where the password/credential is leaked to some location, it can then be available to the attacker."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "useLeakedCredentials"
              }
            ]
          }
        },
        {
          "name": "notGuessable",
          "meta": {
            "user": "Describes if the credentials can be guessed by the attacker(i.e. they represent a password or passphrase)."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "guessCredentials"
              }
            ]
          }
        },
        {
          "name": "unique",
          "meta": {
            "user": "Describes if the credentials are known to be unique and therefore cannot be used in a credentials reuse attack."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialsReuse"
              },
              {
                "type": "attackStep",
                "name": "propagateOneCredentialCompromised"
              }
            ]
          }
        },
        {
          "name": "notPhishable",
          "meta": {
            "user": "Describes if the credentials cannot be phished(they are biometric, e.g. fingerprints or iris scans, or physical, e.g. access cards or keys, elements)."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialTheft"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "If the attacker is able to read the information containing credentials we assume that they are compromised."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "write",
          "meta": {
            "user": "If the attacker is able to write the information containing credentials we assume that they have changed them for the authentication process."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "If the attacker is able to deny the information containing credentials we assume that they have denied them for the authentication process."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "identities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "lockoutFromCredentials"
                }
              }
            ]
          }
        },
        {
          "name": "useLeakedCredentials",
          "meta": {
            "user": "If the password/credential is leaked to some location, it can then be available to the attacker and therefore it can be used."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "EasyAndCertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "attemptCredentialsReuse",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialsReuse"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "requiredFactors"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptCredentialsReuse"
                }
              }
            ]
          }
        },
        {
          "name": "credentialsReuse",
          "meta": {
            "developer": "The user is reusing credentials which means that the attacker is able to compromise all of the non-unique credentials associated with this user."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "attemptUse",
          "meta": {
            "developer": "In order to use these credentials the attacker may require additional factors."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "use"
              }
            ]
          }
        },
        {
          "name": "use",
          "meta": {
            "user": "The attacker is using the credentials to perform a legitimate authentication."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "identities"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "encryptedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "accessDecryptedData"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "signedData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "accessSpoofedData"
                }
              },
              {
                "type": "attackStep",
                "name": "attemptPropagateOneCredentialCompromised"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "credentials"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "use"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hashes"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUse"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "origCreds"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "guessCredentialsFromHash"
                }
              }
            ]
          }
        },
        {
          "name": "attemptPropagateOneCredentialCompromised",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "propagateOneCredentialCompromised"
              }
            ]
          }
        },
        {
          "name": "propagateOneCredentialCompromised",
          "meta": {
            "developer": "Intermediate step used to propagate the credentials reuse attack step."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "collect",
                    "lhs": {
                      "type": "transitive",
                      "stepExpression": {
                        "type": "field",
                        "name": "credentials"
                      }
                    },
                    "rhs": {
                      "type": "field",
                      "name": "identities"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "users"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "oneCredentialCompromised"
                }
              }
            ]
          }
        },
        {
          "name": "attemptCredentialTheft",
          "meta": {
            "developer": "The attacker is attempting to access the credentials."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialTheft"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "requiredFactors"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptCredentialTheft"
                }
              }
            ]
          }
        },
        {
          "name": "credentialTheft",
          "meta": {
            "developer": "The attacker is able to steal the credentials."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        },
        {
          "name": "missingIdentity",
          "meta": {
            "developer": "If there are no Identities asociated with these Credentials we make the worst case scenario assumption regarding the strength of the Credentials."
          },
          "detectors": {},
          "type": "notExist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "identities"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "weakCredentials"
              }
            ]
          }
        },
        {
          "name": "weakCredentials",
          "meta": {
            "developer": "Intermediate step used to represent how weak the credentials the user employs are. This is inversely related to the securityAwareness defense on the User asset associated with the Identity to which these Credentials belong. If either the User or Identity associations are missing the assumption is made that the crentials are weak and therefore guessable by the attacker."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "guessCredentials"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "requiredFactors"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "weakCredentials"
                }
              }
            ]
          }
        },
        {
          "name": "credsHashed",
          "meta": {
            "developer": "If there are no associated hashes the assumption is that the credentials are guessable without any additional requirements."
          },
          "detectors": {},
          "type": "notExist",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "field",
                "name": "hashes"
              }
            ]
          },
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "guessCredentialsFromHash"
              }
            ]
          }
        },
        {
          "name": "guessCredentialsFromHash",
          "meta": {
            "developer": "If hashes are associated with this Credentials asset the assumption is that one of those hashes is required by the attacker to be able to perform a guessing attack."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "guessCredentials"
              }
            ]
          }
        },
        {
          "name": "guessCredentials",
          "meta": {
            "developer": "The attacker can try to just guess a set of credentials. The likelihood of succeeding is dependent on how strong the credentials are.",
            "modeler": "The guessability of the Credentials is influenced by the notGuessable defense on this asset and the securityAwareness defense on the User associated with the Identity that these Credentials belong to. If either the User or Identity associations are missing the assumption is made that the crentials are guessable and only the notGuessable defense would play a role in restricting this attack step."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "HardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptUse"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "User",
      "meta": {
        "user": "This asset represents the user themselves. It is the suitable attack surface for social engineering attacks."
      },
      "category": "User",
      "isAbstract": false,
      "superAsset": null,
      "variables": [],
      "attackSteps": [
        {
          "name": "noPasswordReuse",
          "meta": {
            "user": "If one credential of that user is compromised there is a probability that all other credentials of that user are also compromised."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "passwordReuseCompromise"
              }
            ]
          }
        },
        {
          "name": "noRemovableMediaUsage",
          "meta": {
            "user": "The user does not utilise removable media and therefore the attack steps associated with it cannot be reached."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Enabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulDeliverMaliciousRemovableMedia"
              }
            ]
          }
        },
        {
          "name": "securityAwareness",
          "meta": {
            "user": "The security awareness of the user makes it less likely that social engineering would be successful and reduces the likelihood that the user will engage in unsafe behaviour."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "securityAwarenessBypassed"
              },
              {
                "type": "attackStep",
                "name": "weakCredentials"
              }
            ]
          }
        },
        {
          "name": "bypassSecurityAwareness",
          "meta": {
            "user": "Security awareness can be bypassed."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "securityAwarenessBypassed"
              }
            ]
          }
        },
        {
          "name": "securityAwarenessBypassed",
          "meta": {
            "developer": "Security awareness is bypassed either because it was not set, the attacker was able to circumvent it through additional effort, or we simply assume that everyone has an off day every now and then."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulSocialEngineering"
              },
              {
                "type": "attackStep",
                "name": "successfulDeliverMaliciousRemovableMedia"
              }
            ]
          }
        },
        {
          "name": "oneCredentialCompromised",
          "meta": {
            "developer": "This intermediate attack step is needed in order to block passwordReuseCompromise when no other credential is first compromised."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "passwordReuseCompromise"
              }
            ]
          }
        },
        {
          "name": "passwordReuseCompromise",
          "meta": {
            "developer": "If one reused credential of that user is compromised then, all other credentials of that user can also be compromised."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "userIds"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "credentials"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptCredentialsReuse"
                }
              }
            ]
          }
        },
        {
          "name": "weakCredentials",
          "meta": {
            "developer": "Intermediate attack step that defines the strength of all of the Credentials associated with the user. This is inversely proportional with the user's securityAwareness defense."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "userIds"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "credentials"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "weakCredentials"
                }
              }
            ]
          }
        },
        {
          "name": "attemptSocialEngineering",
          "meta": {
            "user": "An attacker can try to perform social engineering techniques such as phishing and inducing the user to perform malicious actions.",
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses.",
            "modeler": "Social engineering is modeled by having the attacker trigger this attack step on the target Users."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "entrypoint"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulSocialEngineering"
              },
              {
                "type": "attackStep",
                "name": "bypassSecurityAwareness"
              }
            ]
          }
        },
        {
          "name": "successfulSocialEngineering",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "socialEngineering"
              }
            ]
          }
        },
        {
          "name": "socialEngineering",
          "meta": {
            "developer": "Currently social engineering entails phishing credentials and tricking the user into unsafe actions that expose Applications to the attacker. In the future, other social engineering techniques should be added to this attack step."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "credentialTheft"
              },
              {
                "type": "attackStep",
                "name": "unsafeUserActivity"
              }
            ]
          }
        },
        {
          "name": "attemptDeliverMaliciousRemovableMedia",
          "meta": {
            "user": "An attacker can try to deliver a removable media drive(i.e. USB drive) containing malicious code to a location accessible to the target users.",
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses.",
            "modeler": "Social engineering is modeled by having the attacker trigger this attack step on hthe target Users."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "entrypoint"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulDeliverMaliciousRemovableMedia"
              },
              {
                "type": "attackStep",
                "name": "bypassSecurityAwareness"
              }
            ]
          }
        },
        {
          "name": "successfulDeliverMaliciousRemovableMedia",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deliverMaliciousRemovableMedia"
              }
            ]
          }
        },
        {
          "name": "deliverMaliciousRemovableMedia",
          "meta": {
            "developer": "The user is assumed to connect the removable media containing the malicious code to all of the hardware systems that they have access to. Since this is expected to unwittingly happen as part of their normal operations the attack exposes their regular security context."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Exponential",
            "arguments": [
              0.01
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "userIds"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "physicalZones"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "hardwareSystems"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardwareSystems"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              }
            ]
          }
        },
        {
          "name": "credentialTheft",
          "meta": {
            "developer": "Trick the user into providing their credentials.",
            "modeler": "Distribution: Bernoulli(0.5) * Exponential(0.1), source: Sommestad (2011) Password authentication attacks: a survey of attacks and when they will succeed, suggest to use Bernoulli(0.05)"
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "HardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "userIds"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "credentials"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptCredentialTheft"
                }
              }
            ]
          }
        },
        {
          "name": "unsafeUserActivity",
          "meta": {
            "developer": "The user can engage in unsafe behaviour that could allow the attacker to gain access to the applications the user has access to.",
            "modeler": "If the attacker is not able to reach (or be reached) via any of the Applications this garnered access does not materialise into any actual attack vectors."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Exponential",
            "arguments": [
              0.03
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "userIds"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAssume"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "userIds"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptUnsafeUserActivity"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Network",
      "meta": {
        "user": "A network (zone) is a set of network accessible applications and data.",
        "developer": "The network asset tries to cover all the levels of the OSI stack in a very abstract and compact way (i.e. it tries to represent all the OSI layers). For example it will try to cover both ARP attacks (that are Level 2) but also DNS/HTTP spoofing attacks (that are Level 7)."
      },
      "category": "Networking",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
        {
          "name": "outboundAllowedConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "netConnections"
            },
            "rhs": {
              "type": "field",
              "name": "outgoingNetConnections"
            }
          }
        },
        {
          "name": "inboundAllowedConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "union",
              "lhs": {
                "type": "field",
                "name": "netConnections"
              },
              "rhs": {
                "type": "field",
                "name": "ingoingNetConnections"
              }
            },
            "rhs": {
              "type": "field",
              "name": "diodeIngoingNetConnections"
            }
          }
        },
        {
          "name": "allNetConnections",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "union",
              "lhs": {
                "type": "union",
                "lhs": {
                  "type": "field",
                  "name": "netConnections"
                },
                "rhs": {
                  "type": "field",
                  "name": "ingoingNetConnections"
                }
              },
              "rhs": {
                "type": "field",
                "name": "outgoingNetConnections"
              }
            },
            "rhs": {
              "type": "field",
              "name": "diodeIngoingNetConnections"
            }
          }
        },
        {
          "name": "allowedApplicationConnectionsApplications",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "applications"
            },
            "rhs": {
              "type": "collect",
              "lhs": {
                "type": "variable",
                "name": "allNetConnections"
              },
              "rhs": {
                "type": "field",
                "name": "applications"
              }
            }
          }
        }
      ],
      "attackSteps": [
        {
          "name": "physicalAccess",
          "meta": {
            "user": "Attacker has physical access on the network. This means they can cut wires/fibers, connect using iLOs, eavesdrop and get proper network access.",
            "modeler": "This attack step can be used as an entry point when analyzing scenarios that involve gaining physical access to assets."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "entrypoint"
          ],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              },
              {
                "type": "attackStep",
                "name": "attemptAccessUninspectedFromPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "attemptAccessInspectedFromPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "bypassEavesdropDefenseFromPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "bypassAdversaryInTheMiddleDefenseFromPhysicalAccess"
              }
            ]
          }
        },
        {
          "name": "bypassEavesdropDefenseFromPhysicalAccess",
          "meta": {
            "user": "The eavesdrop defense can be bypassed more easily if the attacker has physical access to the network. This attack step will add its impact to the unconditional bypass."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "eavesdropDefenseBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassAdversaryInTheMiddleDefenseFromPhysicalAccess",
          "meta": {
            "user": "The adversary in the middle defense can be bypassed more easily if the attacker has physical access to the network. This attack step will add its impact to the unconditional bypass."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "adversaryInTheMiddleDefenseBypassed"
              }
            ]
          }
        },
        {
          "name": "networkAccessControl",
          "meta": {
            "user": "Access control protects from unauthorized physical access on the network."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessControlBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassAccessControl",
          "meta": {
            "user": "If access control is enabled, the attacker can still try to bypass it and gain access on the network."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessControlBypassed"
              }
            ]
          }
        },
        {
          "name": "accessControlBypassed",
          "meta": {
            "developer": "Access control is bypassed either because it was not set, the attacker was able to circumvent it through additional effort."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAccessUninspectedFromPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "successfulAccessInspectedFromPhysicalAccess"
              }
            ]
          }
        },
        {
          "name": "attemptAccessUninspectedFromPhysicalAccess",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAccessUninspectedFromPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "bypassAccessControl"
              }
            ]
          }
        },
        {
          "name": "attemptAccessInspectedFromPhysicalAccess",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAccessInspectedFromPhysicalAccess"
              },
              {
                "type": "attackStep",
                "name": "bypassAccessControl"
              }
            ]
          }
        },
        {
          "name": "successfulAccessUninspectedFromPhysicalAccess",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessUninspected"
              }
            ]
          }
        },
        {
          "name": "successfulAccessInspectedFromPhysicalAccess",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessInspected"
              }
            ]
          }
        },
        {
          "name": "accessUninspected",
          "meta": {
            "user": "Uninspected access provides connect to all reachable applications without any restrictions."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outboundAllowedConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptConnectToApplicationsUninspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "applications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnectUninspected"
                }
              },
              {
                "type": "attackStep",
                "name": "networkForwardingUninspected"
              },
              {
                "type": "attackStep",
                "name": "attemptReverseReach"
              },
              {
                "type": "attackStep",
                "name": "accessNetworkData"
              },
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "accessInspected",
          "meta": {
            "user": "Inspected access provides connect to all reachable applications, but with limitations."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outboundAllowedConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptConnectToApplicationsInspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "applications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnectInspected"
                }
              },
              {
                "type": "attackStep",
                "name": "networkForwardingInspected"
              },
              {
                "type": "attackStep",
                "name": "accessNetworkData"
              },
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "attemptReverseReach",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "reverseReach",
          "meta": {
            "developer": "Reverse reach is used to determine whether or not the attacker can be reached by the user. Reverse reach propagates toward outgoing or bidirectional communications."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "inboundAllowedConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "applications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              }
            ]
          }
        },
        {
          "name": "networkForwardingUninspected",
          "meta": {
            "developer": "By using the allowed connections (connection rules), uninspected forwarding from one network to another network or applications can happen."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outboundAllowedConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccessNetworksUninspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outboundAllowedConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptConnectToApplicationsUninspected"
                }
              },
              {
                "type": "attackStep",
                "name": "networkForwardingInspected"
              }
            ]
          }
        },
        {
          "name": "networkForwardingInspected",
          "meta": {
            "developer": "By using the allowed connections (connection rules), inspected forwarding from one network to another network or applications can happen."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outboundAllowedConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptAccessNetworksInspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "outboundAllowedConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptConnectToApplicationsInspected"
                }
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "If a DoS is performed it affects, the applications communicating over the network as well as the connected application."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allNetConnections"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allowedApplicationConnectionsApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "denyFromNetworkingAsset"
                }
              }
            ]
          }
        },
        {
          "name": "accessNetworkData",
          "meta": {
            "developer": "Access also the data that are network-wide available."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptEavesdrop"
              },
              {
                "type": "attackStep",
                "name": "attemptAdversaryInTheMiddle"
              }
            ]
          }
        },
        {
          "name": "eavesdropDefense",
          "meta": {
            "user": "This defense protects from eavesdrop attacks. If this defense is disabled, then it is equivalent to the network being considered a broadcast network.",
            "modeler": "If this defense is enabled, attacks such as ARP spoofing should however, still be possible."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "eavesdropDefenseBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassEavesdropDefense",
          "meta": {
            "user": "The eavesdrop defense can be bypassed."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "eavesdropDefenseBypassed"
              }
            ]
          }
        },
        {
          "name": "eavesdropDefenseBypassed",
          "meta": {
            "developer": "The Eavesdrop defense is bypassed either because it was not set, the attacker was able to circumvent it through additional effort."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulEavesdrop"
              }
            ]
          }
        },
        {
          "name": "attemptEavesdrop",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulEavesdrop"
              },
              {
                "type": "attackStep",
                "name": "bypassEavesdropDefense"
              }
            ]
          }
        },
        {
          "name": "successfulEavesdrop",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "eavesdrop"
              }
            ]
          }
        },
        {
          "name": "eavesdrop",
          "meta": {
            "user": "An attacker that performs an eavesdrop attack on a network tries to access all the transferred data over that network."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": false,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "transitData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptRead"
                }
              }
            ]
          }
        },
        {
          "name": "adversaryInTheMiddleDefense",
          "meta": {
            "user": "This defense protects against adversary-in-the-middle (AitM) attacks that are originating either form the network layer (like ARP spoofing) or by manipulating the higher network layers (like DNS poisoning)."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "adversaryInTheMiddleDefenseBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassAdversaryInTheMiddleDefense",
          "meta": {
            "user": "The adversary in the middle defense can be bypassed."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "adversaryInTheMiddleDefenseBypassed"
              }
            ]
          }
        },
        {
          "name": "adversaryInTheMiddleDefenseBypassed",
          "meta": {
            "developer": "The adversary in the middle defense is bypassed either because it was not set, the attacker was able to circumvent it through additional effort."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAdversaryInTheMiddle"
              }
            ]
          }
        },
        {
          "name": "attemptAdversaryInTheMiddle",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAdversaryInTheMiddle"
              },
              {
                "type": "attackStep",
                "name": "bypassAdversaryInTheMiddleDefense"
              }
            ]
          }
        },
        {
          "name": "successfulAdversaryInTheMiddle",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "adversaryInTheMiddle"
              }
            ]
          }
        },
        {
          "name": "adversaryInTheMiddle",
          "meta": {
            "user": "An attacker that performs a AitM attack on a network tries to read and modify all the transferred data over that network."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": true,
            "isIntegrity": true,
            "isAvailability": false
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "eavesdrop"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "transitData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptWrite"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "transitData"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptApplicationRespondConnect"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "RoutingFirewall",
      "meta": {
        "user": "A routing firewall specifies a router with firewall capabilities that connects many networks."
      },
      "category": "Networking",
      "isAbstract": false,
      "superAsset": "Application",
      "variables": [],
      "attackSteps": [
        {
          "name": "deny",
          "meta": {
            "user": "A DoS attack should cascade on the connected networks and associated connections"
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "connectionRules"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptDeny"
                }
              }
            ]
          }
        },
        {
          "name": "fullAccess",
          "meta": {
            "developer": "If full access is achieved on RoutingFirewall then it is 0wned and all connections can be allowed! This can happen by compromising the manager application."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": true,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "union",
                  "lhs": {
                    "type": "union",
                    "lhs": {
                      "type": "union",
                      "lhs": {
                        "type": "collect",
                        "lhs": {
                          "type": "field",
                          "name": "connectionRules"
                        },
                        "rhs": {
                          "type": "field",
                          "name": "networks"
                        }
                      },
                      "rhs": {
                        "type": "collect",
                        "lhs": {
                          "type": "field",
                          "name": "connectionRules"
                        },
                        "rhs": {
                          "type": "field",
                          "name": "outNetworks"
                        }
                      }
                    },
                    "rhs": {
                      "type": "collect",
                      "lhs": {
                        "type": "field",
                        "name": "connectionRules"
                      },
                      "rhs": {
                        "type": "field",
                        "name": "inNetworks"
                      }
                    }
                  },
                  "rhs": {
                    "type": "collect",
                    "lhs": {
                      "type": "field",
                      "name": "connectionRules"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "diodeInNetworks"
                    }
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "accessUninspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "connectionRules"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "applications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnectUninspected"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "ConnectionRule",
      "meta": {
        "user": "This asset is used to model firewall rules between Applications and/or Networks. The association selected (bi/uni-directional) only describes the connection initiation.",
        "developer": "This asset is mainly used to model the functionality of a network connection through a firewall. If Data is added, then it also models the data in transit."
      },
      "category": "Networking",
      "isAbstract": false,
      "superAsset": null,
      "variables": [
        {
          "name": "allApplications",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "union",
              "lhs": {
                "type": "field",
                "name": "applications"
              },
              "rhs": {
                "type": "field",
                "name": "inApplications"
              }
            },
            "rhs": {
              "type": "field",
              "name": "outApplications"
            }
          }
        },
        {
          "name": "senderApplications",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "applications"
            },
            "rhs": {
              "type": "field",
              "name": "outApplications"
            }
          }
        },
        {
          "name": "receiverApplications",
          "stepExpression": {
            "type": "union",
            "lhs": {
              "type": "field",
              "name": "applications"
            },
            "rhs": {
              "type": "field",
              "name": "inApplications"
            }
          }
        }
      ],
      "attackSteps": [
        {
          "name": "restricted",
          "meta": {
            "user": "The restricted defense can be used to probabilistically model the likelihood of both the protocols required by the attack being enabled or the existence of the ConnectionRule altogether."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "restrictedBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassRestricted",
          "meta": {
            "user": "The restricted defense can be bypassed."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "restrictedBypassed"
              }
            ]
          }
        },
        {
          "name": "restrictedBypassed",
          "meta": {
            "developer": "The restricted defense is bypassed either because it was not set, the attacker was able to circumvent it through additional effort."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAccessNetworksUninspected"
              },
              {
                "type": "attackStep",
                "name": "successfulAccessNetworksInspected"
              },
              {
                "type": "attackStep",
                "name": "connectToApplicationsUninspected"
              },
              {
                "type": "attackStep",
                "name": "connectToApplicationsInspected"
              },
              {
                "type": "attackStep",
                "name": "deny"
              },
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "payloadInspection",
          "meta": {
            "user": "If enabled, then the traffic is considered to be inspected and filtered by an IDPS that can detect and stop malicious payloads, effectively allowing only legitimate communication(i.e. network-level vulnerabilities cannot be exploited, unsafe actions that the user may taken that would benefit the attacker are also prevented)."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "payloadInspectionBypassed"
              }
            ]
          }
        },
        {
          "name": "bypassPayloadInspection",
          "meta": {
            "user": "Payload inspection can be bypassed."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "VeryHardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "payloadInspectionBypassed"
              }
            ]
          }
        },
        {
          "name": "payloadInspectionBypassed",
          "meta": {
            "developer": "Payload inspection is bypassed either because it was not set, the attacker was able to circumvent it through additional effort."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAccessNetworksUninspected"
              },
              {
                "type": "attackStep",
                "name": "connectToApplicationsUninspected"
              },
              {
                "type": "attackStep",
                "name": "reverseReach"
              }
            ]
          }
        },
        {
          "name": "attemptReverseReach",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "reverseReach"
              },
              {
                "type": "attackStep",
                "name": "bypassRestricted"
              },
              {
                "type": "attackStep",
                "name": "bypassPayloadInspection"
              }
            ]
          }
        },
        {
          "name": "reverseReach",
          "meta": {
            "developer": "Reverse reach is used to determine whether or not the attacker can be reached by the user. Reverse reach propagates via outgoing or bidirectional communications."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "senderApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "union",
                  "lhs": {
                    "type": "field",
                    "name": "networks"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "outNetworks"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "attemptReverseReach"
                }
              }
            ]
          }
        },
        {
          "name": "attemptAccessNetworksUninspected",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAccessNetworksUninspected"
              },
              {
                "type": "attackStep",
                "name": "bypassRestricted"
              }
            ]
          }
        },
        {
          "name": "attemptAccessNetworksInspected",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "successfulAccessNetworksInspected"
              },
              {
                "type": "attackStep",
                "name": "bypassRestricted"
              }
            ]
          }
        },
        {
          "name": "successfulAccessNetworksUninspected",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessNetworksUninspected"
              }
            ]
          }
        },
        {
          "name": "successfulAccessNetworksInspected",
          "meta": {
            "developer": "Intermediate attack step to model defenses."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "accessNetworksInspected"
              }
            ]
          }
        },
        {
          "name": "accessNetworksUninspected",
          "meta": {
            "developer": "Access all networks that are associated with this ConnectionRule, without any restriction due to inspection."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "union",
                  "lhs": {
                    "type": "union",
                    "lhs": {
                      "type": "field",
                      "name": "networks"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "inNetworks"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "diodeInNetworks"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "accessUninspected"
                }
              },
              {
                "type": "attackStep",
                "name": "accessNetworksInspected"
              }
            ]
          }
        },
        {
          "name": "accessNetworksInspected",
          "meta": {
            "developer": "Access all networks that are associated with this ConnectionRule, but taking into account that the traffic payload is being inspected."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "union",
                  "lhs": {
                    "type": "union",
                    "lhs": {
                      "type": "field",
                      "name": "networks"
                    },
                    "rhs": {
                      "type": "field",
                      "name": "inNetworks"
                    }
                  },
                  "rhs": {
                    "type": "field",
                    "name": "diodeInNetworks"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "accessInspected"
                }
              }
            ]
          }
        },
        {
          "name": "attemptConnectToApplicationsUninspected",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "connectToApplicationsUninspected"
              },
              {
                "type": "attackStep",
                "name": "bypassRestricted"
              },
              {
                "type": "attackStep",
                "name": "bypassPayloadInspection"
              }
            ]
          }
        },
        {
          "name": "attemptConnectToApplicationsInspected",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "connectToApplicationsInspected"
              },
              {
                "type": "attackStep",
                "name": "bypassRestricted"
              },
              {
                "type": "attackStep",
                "name": "bypassPayloadInspection"
              }
            ]
          }
        },
        {
          "name": "connectToApplicationsUninspected",
          "meta": {
            "developer": "Connect to all the (server) Applications that are associated with this ConnectionRule, without any restriction due to inspection."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "receiverApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnectUninspected"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "receiverApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnectInspected"
                }
              }
            ]
          }
        },
        {
          "name": "connectToApplicationsInspected",
          "meta": {
            "developer": "Connect to all the (server) Applications that are associated with this ConnectionRule, but taking into account that the traffic payload is being inspected. This attack step is used to allow legitimate traffic even when payload inspection is enabled on the connection."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "receiverApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "networkConnectInspected"
                }
              }
            ]
          }
        },
        {
          "name": "attemptDeny",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses and trigger bypasses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              },
              {
                "type": "attackStep",
                "name": "bypassRestricted"
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "If a connection rule is denied it affects the applications communicating over it."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": {
            "isConfidentiality": false,
            "isIntegrity": false,
            "isAvailability": true
          },
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "variable",
                  "name": "allApplications"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "denyFromNetworkingAsset"
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "Vulnerability",
      "meta": {
        "user": "Vulnerability refers to the inability (of a system, application, etc.) to withstand the effects of a hostile environment."
      },
      "category": "Vulnerability",
      "isAbstract": true,
      "superAsset": null,
      "variables": [],
      "attackSteps": [
        {
          "name": "notPresent",
          "meta": {
            "user": "This defense is used to reason about the attack vectors introduced by this asset. This is particularly useful for vulnerabilities where it is common to explore the possibility of patching them out.",
            "developer": "Enabling this defense should make the asset behave as if it did not exist, as such all of its impactful attack steps should be disabled by it."
          },
          "detectors": {},
          "type": "defense",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "attemptAbuse",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "abuse",
          "meta": {
            "user": "The attacker is trying to abuse a vulnerability in an asset."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "attemptExploit"
              }
            ]
          }
        },
        {
          "name": "attemptExploit",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        },
        {
          "name": "exploit",
          "meta": {
            "user": "Attacker is employing an exploit that makes use of this vulnerability."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "impact"
              }
            ]
          }
        },
        {
          "name": "impact",
          "meta": {
            "user": "Each vulnerability has an impact (of different levels) on the vulnerable component."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": null
        }
      ]
    },
    {
      "name": "SoftwareVulnerability",
      "meta": {
        "user": "A vulnerability that affects software (i.e. Applications or SoftwareProducts).",
        "developer": "Vulnerabilities in coreLang were designed to be in line with the 3.1 CVSS specification(https://www.first.org/cvss/specification-document#Common-Vulnerability-Scoring-System-version-3-1-Specification-Document). The defenses on the SoftwareVulnerability asset represent 7 of the base metrics scores, all of them except the scope metric. The temporal and environmental metrics are beyond the language's scope."
      },
      "category": "Vulnerability",
      "isAbstract": false,
      "superAsset": "Vulnerability",
      "variables": [],
      "attackSteps": [
        {
          "name": "networkAccessRequired",
          "meta": {
            "user": "Network access is required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-1-Attack-Vector-AV"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "networkAccessAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityNetworkAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "localAccessRequired",
          "meta": {
            "user": "Local access is required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-1-Attack-Vector-AV"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "localAccessAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityLocalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "physicalAccessRequired",
          "meta": {
            "user": "Physical access is required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-1-Attack-Vector-AV"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "physicalAccessAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityPhysicalAccessAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "lowPrivilegesRequired",
          "meta": {
            "user": "Low privileges are required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-3-Privileges-Required-PR"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "lowPrivilegesAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityLowPrivilegesAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "highPrivilegesRequired",
          "meta": {
            "user": "High privileges are required to abuse the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-3-Privileges-Required-PR"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "highPrivilegesAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityHighPrivilegesAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "userInteractionRequired",
          "meta": {
            "user": "Some exploits require user interaction. This defense should specify the probability of such interaction on the given application.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-4-User-Interaction-UI"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "userInteractionAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityUserInteractionAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "confidentialityImpactLimitations",
          "meta": {
            "user": "Limits the impact on confidentiality of the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-3-1-Confidentiality-C"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              }
            ]
          }
        },
        {
          "name": "availabilityImpactLimitations",
          "meta": {
            "user": "Limits the impact on availability of the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-3-3-Availability-A"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "integrityImpactLimitations",
          "meta": {
            "user": "Limits the impact on integrity of the vulnerability.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-3-2-Integrity-I"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "modify"
              }
            ]
          }
        },
        {
          "name": "highComplexityExploitRequired",
          "meta": {
            "user": "The vulnerability relies on a high complexity exploit that requires the attacker to expend additional effort (time) in order to successfully make use of it.",
            "developer": "A vulnerability that has high complexity due to its intrinsic properties that are beyond the attacker's control.",
            "modeler": "https://www.first.org/cvss/v3.1/specification-document#2-1-2-Attack-Complexity-AC"
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploitTrivially"
              }
            ]
          }
        },
        {
          "name": "inherentUserInteraction",
          "meta": {
            "user": "The user may fulfil the user interaction requirement through their regular activities, without requiring the attacker to induce them to do so.",
            "modeler": "Different software vulnerabilities that require user interaction to exploit can vary substantially in how likely those interactions are. They can range from simply using a shortcut or starting a service to enabling very specific features that the user would never perform without attacker influence. The probability assigned to this attack step should be tuned to fit the description of the vulnerability."
          },
          "detectors": {},
          "type": "or",
          "tags": [],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "HardAndUncertain",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "userInteractionAchieved"
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "collect",
                  "lhs": {
                    "type": "field",
                    "name": "softwareProduct"
                  },
                  "rhs": {
                    "type": "field",
                    "name": "softApplications"
                  }
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "softwareProductVulnerabilityUserInteractionAchieved"
                }
              }
            ]
          }
        },
        {
          "name": "networkAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step to model network access requirement."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "localAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step to model local access requirement."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "physicalAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step to model physical access requirement."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "lowPrivilegesAchieved",
          "meta": {
            "developer": "Intermediate attack step to model low privileges requirement."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "highPrivilegesAchieved",
          "meta": {
            "developer": "Intermediate attack step to model high privileges requirement."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "userInteractionAchieved",
          "meta": {
            "developer": "Intermediate attack step to model user interaction requirement."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "impact",
          "meta": {
            "developer": "The actual impact caused by successfully exploiting the vulnerability."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              },
              {
                "type": "attackStep",
                "name": "modify"
              },
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "The attacker can read some or all of the associated applications's code and data."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "application"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softwareProduct"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "readApplications"
                }
              }
            ]
          }
        },
        {
          "name": "modify",
          "meta": {
            "user": "The attacker can modify some or all of the associated application's data and/or source code."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "application"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "modify"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softwareProduct"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "modifyApplications"
                }
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "Denial-of-Service attack is an attack in which an application is rendered unavailable to its intended users by temporarily or indefinitely disrupting it."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "application"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              },
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "softwareProduct"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "denyApplications"
                }
              }
            ]
          }
        },
        {
          "name": "attemptAbuse",
          "meta": {
            "developer": "Trigger inherent user interaction for software vulnerabilities, it is only relevant for vulnerabilities that do require user interaction."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": false,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "inherentUserInteraction"
              }
            ]
          }
        },
        {
          "name": "attemptExploit",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden",
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploitTrivially"
              },
              {
                "type": "attackStep",
                "name": "exploitWithEffort"
              }
            ]
          }
        },
        {
          "name": "exploitTrivially",
          "meta": {
            "developer": "The exploit is trivial and requires insignificant effort from the attacker in order to be successful."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        },
        {
          "name": "exploitWithEffort",
          "meta": {
            "developer": "The attacker must expend effort in order to successfully exploit the vulnerability."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Exponential",
            "arguments": [
              0.01
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        }
      ]
    },
    {
      "name": "HardwareVulnerability",
      "meta": {
        "user": "A vulnerability that affects hardware."
      },
      "category": "Vulnerability",
      "isAbstract": false,
      "superAsset": "Vulnerability",
      "variables": [],
      "attackSteps": [
        {
          "name": "physicalAccessRequired",
          "meta": {
            "user": "Physical access is required to abuse the vulnerability.",
            "modeler": "Some hardware vulnerabilities require physical access to the components, while some can be exploited from software."
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "physicalAccessAchieved"
              }
            ]
          }
        },
        {
          "name": "confidentialityImpactLimitations",
          "meta": {
            "user": "Limits the impact on confidentiality of the vulnerability.",
            "modeler": "Analogous defense to the SoftwareVulnerability impact limitations."
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              }
            ]
          }
        },
        {
          "name": "availabilityImpactLimitations",
          "meta": {
            "user": "Limits the impact on availability of the vulnerability.",
            "modeler": "Analogous defense to the SoftwareVulnerability impact limitations."
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "integrityImpactLimitations",
          "meta": {
            "user": "Limits the impact on integrity of the vulnerability.",
            "modeler": "Analogous defense to the SoftwareVulnerability impact limitations."
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "modify"
              }
            ]
          }
        },
        {
          "name": "effortRequiredToExploit",
          "meta": {
            "user": "The vulnerability requires additional effort(time) from the attacker in order to be successful.",
            "modeler": "The expectation is that the attacker has prolonged or recurring access to the targeted hardware in order to repeatedly/continuously try the exploit."
          },
          "detectors": {},
          "type": "defense",
          "tags": [
            "suppress"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Disabled",
            "arguments": []
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploitTrivially"
              }
            ]
          }
        },
        {
          "name": "physicalAccessAchieved",
          "meta": {
            "developer": "Intermediate attack step to model physical access requirement."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "abuse"
              }
            ]
          }
        },
        {
          "name": "impact",
          "meta": {
            "developer": "The actual impact caused by successfully exploiting the vulnerability."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "read"
              },
              {
                "type": "attackStep",
                "name": "modify"
              },
              {
                "type": "attackStep",
                "name": "deny"
              }
            ]
          }
        },
        {
          "name": "read",
          "meta": {
            "user": "The attacker can read some or all of the associated hardware's data."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardware"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "read"
                }
              }
            ]
          }
        },
        {
          "name": "modify",
          "meta": {
            "user": "The attacker can modify some or all of the associated hardware's behaviour."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardware"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "modify"
                }
              }
            ]
          }
        },
        {
          "name": "deny",
          "meta": {
            "user": "Denial-of-Service attack is an attack in which a machine or hardware component is rendered unavailable to its intended users by temporarily or indefinitely disrupting it."
          },
          "detectors": {},
          "type": "and",
          "tags": [],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "collect",
                "lhs": {
                  "type": "field",
                  "name": "hardware"
                },
                "rhs": {
                  "type": "attackStep",
                  "name": "deny"
                }
              }
            ]
          }
        },
        {
          "name": "attemptExploit",
          "meta": {
            "developer": "Intermediate attack step to allow for defenses."
          },
          "detectors": {},
          "type": "or",
          "tags": [
            "hidden",
            "Override"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploitTrivially"
              },
              {
                "type": "attackStep",
                "name": "exploitWithEffort"
              }
            ]
          }
        },
        {
          "name": "exploitTrivially",
          "meta": {
            "developer": "The exploit is trivial and requires insignificant effort from the attacker in order to be successful."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": null,
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        },
        {
          "name": "exploitWithEffort",
          "meta": {
            "developer": "The attacker must expend effort in order to successfully exploit the vulnerability."
          },
          "detectors": {},
          "type": "and",
          "tags": [
            "hidden"
          ],
          "risk": null,
          "ttc": {
            "type": "function",
            "name": "Exponential",
            "arguments": [
              0.01
            ]
          },
          "requires": null,
          "reaches": {
            "overrides": true,
            "stepExpressions": [
              {
                "type": "attackStep",
                "name": "exploit"
              }
            ]
          }
        }
      ]
    }
  ],
  "associations": [
    {
      "name": "SysExecution",
      "meta": {
        "user": "Hardware on which Applications are running. The host hardware is not mandatory to be specified."
      },
      "leftAsset": "Hardware",
      "leftField": "hostHardware",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "Application",
      "rightField": "sysExecutedApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AppExecution",
      "meta": {
        "user": "Sandboxing and containerization are represented through AppExecution. This application hosting can be nested. For example, application 1 runs application 2 which runs application 3. (Where application 1 is an OS, application 2 is a VM, and application 3 is app running in the VM.)"
      },
      "leftAsset": "Application",
      "leftField": "hostApp",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "Application",
      "rightField": "appExecutedApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AppProtection",
      "meta": {
        "user": "IDPSs can provide protection to other applications."
      },
      "leftAsset": "IDPS",
      "leftField": "protectorIDPSs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "protectedApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AppSoftwareProduct",
      "meta": {
        "user": "An application can be associated with a software product that has some specific characteristics such as specific Vulnerabilities and deployment repository."
      },
      "leftAsset": "SoftwareProduct",
      "leftField": "appSoftProduct",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "Application",
      "rightField": "softApplications",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ZoneInclusion",
      "meta": {
        "user": "Access on PhysicalZone will give physicalAccess on the deployed Hardware, but access to the hardware does not provide access to the physical zone (e.g. iLOs)."
      },
      "leftAsset": "PhysicalZone",
      "leftField": "physicalZones",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Hardware",
      "rightField": "hardwareSystems",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ZoneInclusion",
      "meta": {
        "user": "Access on PhysicalZone will give physicalAccess on the deployed networks, but access to the network does not provide access to the physical zone."
      },
      "leftAsset": "PhysicalZone",
      "leftField": "physicalZones",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Network",
      "rightField": "networks",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DataContainment",
      "meta": {
        "user": "Data can be contained inside other data."
      },
      "leftAsset": "Data",
      "leftField": "containingData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Data",
      "rightField": "containedData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AppContainment",
      "meta": {
        "user": "An application should be able to contain some data."
      },
      "leftAsset": "Data",
      "leftField": "containedData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "containingApp",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "SendData",
      "meta": {
        "user": "An application can also send some data that are supposed to be transferred over a network or connection. This expresses an active connection."
      },
      "leftAsset": "Data",
      "leftField": "sentData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "senderApp",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ReceiveData",
      "meta": {
        "user": "An application can also receive some data that are supposed to be transferred over a network or connection. This expresses an active connection."
      },
      "leftAsset": "Data",
      "leftField": "receivedData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "receiverApp",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DataInTransit",
      "meta": {
        "user": "A network can also contain some data that are supposed to be network-wide available."
      },
      "leftAsset": "Data",
      "leftField": "transitData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Network",
      "rightField": "transitNetwork",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DataHosting",
      "meta": {
        "user": "Data can be hosted on hardware."
      },
      "leftAsset": "Data",
      "leftField": "hostedData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Hardware",
      "rightField": "hardware",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "InfoContainment",
      "meta": {
        "user": "Data can contain information, as for example credentials."
      },
      "leftAsset": "Data",
      "leftField": "containerData",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Information",
      "rightField": "information",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "Replica",
      "meta": {
        "user": "Information can be replicated across multiple data assets that offer redundancy."
      },
      "leftAsset": "Data",
      "leftField": "dataReplicas",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Information",
      "rightField": "replicatedInformation",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "Dependence",
      "meta": {
        "user": "Data can be specified as a dependence for an Application."
      },
      "leftAsset": "Data",
      "leftField": "dataDependedUpon",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "dependentApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "Dependence",
      "meta": {
        "user": "Information can be specified as a dependence for an Application."
      },
      "leftAsset": "Information",
      "leftField": "infoDependedUpon",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "dependentApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "EncryptionCredentials",
      "meta": {
        "user": "Encrypted data can be associated with the relevant encryption credentials."
      },
      "leftAsset": "Credentials",
      "leftField": "encryptCreds",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "Data",
      "rightField": "encryptedData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "SigningCredentials",
      "meta": {
        "user": "Signed data can be associated with the relevant signing credentials."
      },
      "leftAsset": "Credentials",
      "leftField": "signingCreds",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "Data",
      "rightField": "signedData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "HashedCredentials",
      "meta": {
        "user": "Credentials can be associated with their hashed counterparts. Multiple hashes can be generated for the same Credentials, but a hash is unique to one set of Credentials."
      },
      "leftAsset": "Credentials",
      "leftField": "hashes",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Credentials",
      "rightField": "origCreds",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "ConditionalAuthentication",
      "meta": {
        "user": "Credentials can be associated with other Credentials to depict conditional authentication procedures, such as multi-factor authentication."
      },
      "leftAsset": "Credentials",
      "leftField": "credentials",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Credentials",
      "rightField": "requiredFactors",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "IdentityCredentials",
      "meta": {},
      "leftAsset": "Identity",
      "leftField": "identities",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Credentials",
      "rightField": "credentials",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "CanAssume",
      "meta": {
        "user": "Starting from a parent Identity, the child Identities can be assumed due to inheritance."
      },
      "leftAsset": "Identity",
      "leftField": "parentId",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Identity",
      "rightField": "childId",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "MemberOf",
      "meta": {},
      "leftAsset": "Group",
      "leftField": "memberOf",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Identity",
      "rightField": "groupIds",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "MemberOf",
      "meta": {},
      "leftAsset": "Group",
      "leftField": "parentGroup",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Group",
      "rightField": "childGroups",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ExecutionPrivilegeAccess",
      "meta": {
        "user": "Every application executes on a system with privileges of a specified identity on the system. If the application is compromised then the privileges should be compromised."
      },
      "leftAsset": "IAMObject",
      "leftField": "executionPrivIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "execPrivApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "HighPrivilegeApplicationAccess",
      "meta": {
        "user": "High privilege application access on an Application results in the (full) access/compromise of the application and all the child applications."
      },
      "leftAsset": "IAMObject",
      "leftField": "highPrivAppIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "highPrivApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "LowPrivilegeApplicationAccess",
      "meta": {
        "user": "Low privilege application access on an Application allows only the local interaction with the application and all the specified privileges."
      },
      "leftAsset": "IAMObject",
      "leftField": "lowPrivAppIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "lowPrivApps",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ReadPrivileges",
      "meta": {},
      "leftAsset": "IAMObject",
      "leftField": "readingIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Data",
      "rightField": "readPrivData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "WritePrivileges",
      "meta": {},
      "leftAsset": "IAMObject",
      "leftField": "writingIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Data",
      "rightField": "writePrivData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DeletePrivileges",
      "meta": {},
      "leftAsset": "IAMObject",
      "leftField": "deletingIAMs",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Data",
      "rightField": "deletePrivData",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "HasPrivileges",
      "meta": {
        "user": "Identities, Groups, and Privileges may have a subset of Privileges that we logically separate to model specific scenarios, such as partial lockouts or speculating about possible privileges."
      },
      "leftAsset": "IAMObject",
      "leftField": "IAMOwners",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Privileges",
      "rightField": "subprivileges",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "AccountManagement",
      "meta": {
        "user": "Identities, Groups, and Privileges may have account management roles for other Identities, Groups, and Privileges."
      },
      "leftAsset": "IAMObject",
      "leftField": "managers",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "IAMObject",
      "rightField": "managedIAMs",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ZoneAccess",
      "meta": {
        "user": "A user may have access to different physical zones."
      },
      "leftAsset": "User",
      "leftField": "users",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "PhysicalZone",
      "rightField": "physicalZones",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "HardwareAccess",
      "meta": {
        "user": "A user may have access to different hardware systems, rigs, or components."
      },
      "leftAsset": "User",
      "leftField": "users",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Hardware",
      "rightField": "hardwareSystems",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "UserAssignedIdentities",
      "meta": {
        "user": "A user may have different identities associated with it."
      },
      "leftAsset": "User",
      "leftField": "users",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Identity",
      "rightField": "userIds",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "FirewallConnectionRule",
      "meta": {
        "user": "A routing firewall has routing or firewall rules specified by connections between networks or applications respectively."
      },
      "leftAsset": "RoutingFirewall",
      "leftField": "routingFirewalls",
      "leftMultiplicity": {
        "min": 0,
        "max": 1
      },
      "rightAsset": "ConnectionRule",
      "rightField": "connectionRules",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ManagedBy",
      "meta": {
        "user": "A routing firewall can have an admin/manager interface (application) that is accessible from a network location."
      },
      "leftAsset": "RoutingFirewall",
      "leftField": "managedRoutingFw",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "managerApp",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "NetworkExposure",
      "meta": {
        "user": "An application can communicate / be exposed on a network.",
        "modeler": "This is DEPRECATED and should only be used by fully aware modelers.",
        "developer": "This can equivalently be modeled using a ConnectionRule but this direct approach should be prefered in the case where the application is \u201clocated\u201d in the same network as the host on which it is running."
      },
      "leftAsset": "Network",
      "leftField": "networks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "applications",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ApplicationConnection",
      "meta": {
        "user": "An application can communicate over one or more (mesh type) bidirectional connections.",
        "modeler": "ConnectionRules associated with Applications are practically expressing a traffic flow."
      },
      "leftAsset": "Application",
      "leftField": "applications",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "appConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "InApplicationConnection",
      "meta": {
        "user": "Two or more applications can also be inter-connected via a uni-directional connection. In means that this is the server side application, awaiting incoming connections."
      },
      "leftAsset": "Application",
      "leftField": "inApplications",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "ingoingAppConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "OutApplicationConnection",
      "meta": {
        "user": "Two or more applications can also be inter-connected via a uni-directional connection. Out means that this is the client side application initiating connections."
      },
      "leftAsset": "Application",
      "leftField": "outApplications",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "outgoingAppConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "NetworkConnection",
      "meta": {
        "user": "Two or more networks can also be inter-connected via a bidirectional connection."
      },
      "leftAsset": "Network",
      "leftField": "networks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "netConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "InNetworkConnection",
      "meta": {
        "user": "Two or more networks can also be inter-connected via a uni-directional connection. In means that ingoing traffic to the network is allowed."
      },
      "leftAsset": "Network",
      "leftField": "inNetworks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "ingoingNetConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "OutNetworkConnection",
      "meta": {
        "user": "Two or more networks can also be inter-connected via a uni-directional connection. Out means that outgoing traffic from the network is allowed."
      },
      "leftAsset": "Network",
      "leftField": "outNetworks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "outgoingNetConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "DiodeInNetworkConnection",
      "meta": {
        "user": "Two or more networks can also be inter-connected via a uni-directional connection that acts like a diode. That means that no responses can come back after connection initiation."
      },
      "leftAsset": "Network",
      "leftField": "diodeInNetworks",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "ConnectionRule",
      "rightField": "diodeIngoingNetConnections",
      "rightMultiplicity": {
        "min": 0,
        "max": null
      }
    },
    {
      "name": "ApplicationVulnerability",
      "meta": {
        "user": "An Application can have multiple software vulnerabilities."
      },
      "leftAsset": "SoftwareVulnerability",
      "leftField": "vulnerabilities",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Application",
      "rightField": "application",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "ApplicationVulnerability",
      "meta": {
        "user": "A SoftwareProduct can have multiple software vulnerabilities."
      },
      "leftAsset": "SoftwareVulnerability",
      "leftField": "softProductVulnerabilities",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "SoftwareProduct",
      "rightField": "softwareProduct",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    },
    {
      "name": "hardwareVulnerability",
      "meta": {
        "user": "A Hardware system/component can have multiple hardware vulnerabilities."
      },
      "leftAsset": "HardwareVulnerability",
      "leftField": "vulnerabilities",
      "leftMultiplicity": {
        "min": 0,
        "max": null
      },
      "rightAsset": "Hardware",
      "rightField": "hardware",
      "rightMultiplicity": {
        "min": 0,
        "max": 1
      }
    }
  ]
}